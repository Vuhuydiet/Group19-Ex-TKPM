// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions", "prismaSchemaFolder", "typedSql"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model Program {
  id          String   @id @default(cuid())
  name        String
  description String
  students    Student[]
}

model Student {
  id               String           @id @default(cuid())
  name             String
  dob              DateTime
  gender           String
  facultyId        String
  faculty          Faculty          @relation(fields: [facultyId], references: [id], map: "Student_Faculty_fkey")
  academicYear     Int
  programId        String
  program          Program          @relation(fields: [programId], references: [id], map: "Student_Program_fkey")
  permanentAddressId String
  permanentAddress Address          @relation("PermanentAddress", fields: [permanentAddressId], references: [id], map: "Student_PermanentAddress_fkey")
  temporaryAddressId String?
  temporaryAddress Address?         @relation("TemporaryAddress", fields: [temporaryAddressId], references: [id], map: "Student_TemporaryAddress_fkey")
  email            String           @unique
  phone            String
  statusId         String
  status           StudyStatus      @relation(fields: [statusId], references: [id], map: "Student_Status_fkey")
  identityDocumentId String?        // Ensure this field exists
  identityDocument IdentityDocument? @relation(map: "Student_IdentityDocument_fkey")
  nationality      String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}